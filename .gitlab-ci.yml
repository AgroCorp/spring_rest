stages:
  - build
  - test
  - deploy
  - visualize

default:
  tags:
    - docker-runner

build-BE:
  stage: build
  image: maven:3
  variables:
    MAVEN_OPTS: >-
      -Dmaven.test.skip=true
    MAVEN_CLI_OPTS: >-
      --batch-mode
      -f pom.xml
  script:
    - mvn $MAVEN_CLI_OPTS $MAVEN_OPTS clean package
  artifacts:
    paths:
      - target/*.jar
build-FE:
  stage: build
  image: node:16.17.0-alpine
  before_script:
    - export REACT_APP_API_BASE_URL=http://restapi:3001
    - apk update
    - apk add tar
  script:
    - npm --prefix ./React/rest-api install
    - npm --prefix ./React/rest-api run build
    - cp -r ./React/rest-api/build ./
    - find ./build/ -printf "%P\n" -type f -o -type l -o -type d | tar -czf build.tar.gz --no-recursion -C ./build/ -T -
  artifacts:
    paths:
      - build.tar.gz


unit-test:
  stage: test
  image: maven:3
  variables:
    MAVEN_OPTS: >-
      -Dmaven.test.failure.ignore=true
      -Dspring.profiles.active=junit test
    MAVEN_CLI_OPTS: >-
      --batch-mode
      -f pom.xml
  script:
    - mvn $MAVEN_CLI_OPTS $MAVEN_OPTS test
  artifacts:
    reports:
      junit:
        - target/surefire-reports/TEST-*.xml
        - target/failsafe-reports/TEST-*.xml
jacoco-coverage:
  stage: test
  image: maven:3
  script:
    mvn clean org.jacoco:jacoco-maven-plugin:0.8.10:prepare-agent verify org.jacoco:jacoco-maven-plugin:0.8.10:report
  artifacts:
    paths:
      - target/site/jacoco/jacoco.xml
sonarqube-BE:
  stage: test
  image: maven:3
  variables:
    MAVEN_CLI_OPTS: >-
      -B
      -f pom.xml
    MAVEN_OPTS: >-
      -Dmaven.test.skip=true
  script:
    - mvn $MAVEN_CLI_OPTS $MAVEN_OPTS sonar:sonar
sonarqube-FE:
  stage: test
  image: node:16.17.0-alpine
  script:
    - node React/rest-api/sonarqube-scanner.js

javadoc:
  only:
    - main
  stage: deploy
  image: maven:3
  script:
    - mvn javadoc:javadoc
    - git subtree push --prefix target/site/apidocs https://$GIT_USER:$GIT_PW@github.com/AgroCorp/spring_rest.git gh-pages

coverage-convert:
  # Must be in a stage later than test-jdk11's stage.
  # The `visualize` stage does not exist by default.
  # Please define it first, or choose an existing stage like `deploy`.
  stage: visualize
  image: registry.gitlab.com/haynes/jacoco2cobertura:1.0.9
  script:
    # convert report from jacoco to cobertura, using relative project path
    - python /opt/cover2cover.py target/site/jacoco/jacoco.xml $CI_PROJECT_DIR/src/main/java/ > target/site/cobertura.xml
  needs: ["jacoco-coverage"]
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: target/site/cobertura.xml