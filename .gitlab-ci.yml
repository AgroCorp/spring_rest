stages:
  - build
  - test
  - docker
  - deploy

variables:
  MAJOR: 0
  MINOR: 0
  PATCH: 4
  VERSION: ${MAJOR}.${MINOR}.${PATCH}
  NEXUS_URL: 192.168.2.55:8888

default:
  image: alpine
  tags:
    - docker-runner

release-tag:
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
      when: manual
  stage: deploy
  script:
    - apk update && apk add curl
    - curl --location --output /usr/local/bin/release-cli "https://gitlab.com/api/v4/projects/gitlab-org%2Frelease-cli/packages/generic/release-cli/latest/release-cli-linux-amd64"
    - chmod +x /usr/local/bin/release-cli
  release:
    description: $VERSION
    tag_name: $VERSION
    name: "Release ${VERSION}"
    ref: $CI_COMMIT_SHA

build-BE:
  stage: build
  image: arm64v8/maven:3.9-eclipse-temurin-21-alpine
  variables:
    MAVEN_CLI_OPTS: >-
      --batch-mode
      -f pom.xml
      -s .mvn/settings.xml
      -Dmaven.test.skip=true
      -Drevision=$VERSION
  script:
    - mvn $MAVEN_CLI_OPTS clean package
  artifacts:
    expire_in: 3 days
    paths:
      - target/springRest-*.jar
    reports:
      cyclonedx: target/bom.xml
build-FE:
  stage: build
  image: node:16.17.0-alpine
  before_script:
    - apk update
    - apk --no-cache add findutils tar && rm -rf /var/cache/apk/*
    - npm config set //192.168.2.55:8101/repository/npm-group/:_auth $NEXUS_TOKEN
  script:
    - CI=false npm --prefix ./React/rest-api install
    - CI=false npm --prefix ./React/rest-api run build
    - cp -r ./React/rest-api/build ./
    - find ./build/ -printf "%P\n" -type f -o -type l -o -type d | tar -czf build.tar.gz --no-recursion -C ./build/ -T -
  artifacts:
    expire_in: 3 days
    paths:
      - build.tar.gz

unit-test:
  stage: test
  image: arm64v8/maven:3.9-eclipse-temurin-21-alpine
  variables:
    MAVEN_CLI_OPTS: >-
      -B
      -f pom.xml
      -s .mvn/settings.xml
      -Dmaven.test.failure.ignore=true
      -Drevision=$VERSION
      -Dspring.profiles.active=junit
  script:
    - mvn $MAVEN_CLI_OPTS test
  artifacts:
    expire_in: 3 days
    reports:
      junit:
        - target/surefire-reports/TEST-*.xml
        - target/failsafe-reports/TEST-*.xml
jacoco-coverage:
  stage: test
  image: maven:3-openjdk-17
  variables:
    MAVEN_CLI_OPTS: >-
      -B
      -f pom.xml
      -s .mvn/settings.xml
      -Drevision=$VERSION
  script:
    - mvn $MAVEN_CLI_OPTS clean org.jacoco:jacoco-maven-plugin:0.8.10:prepare-agent test org.jacoco:jacoco-maven-plugin:0.8.10:report
    - sed -rnE 's/^.*<td>Total<([^>]+>){4}([^<]*).*$/Missed instructions \2/p'  target/site/jacoco/index.html
  coverage: "/Missed instructions ?([0-9]{1,3})%/"
  artifacts:
    expire_in: 3 days
    paths:
      - target/site/jacoco/jacoco.xml
sonarqube:
  stage: test
  image: arm64v8/maven:3.9-eclipse-temurin-21-alpine
  dependencies:
    - jacoco-coverage
  needs: ["jacoco-coverage", "unit-test"]
  variables:
    MAVEN_CLI_OPTS: >-
      -B
      -f pom.xml
      -s .mvn/settings.xml
      -Dmaven.test.skip=true
      -Drevision=$VERSION
  before_script:
    - SONAR_SCANNER_VERSION=5.0.1.3006
    - apk add --no-cache ca-certificates curl nodejs npm
    - mkdir -p /opt
    - curl -fSL https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-${SONAR_SCANNER_VERSION}.zip -o /opt/sonar-scanner.zip
    - unzip /opt/sonar-scanner.zip -d /opt
    - rm /opt/sonar-scanner.zip
    - ln -s /opt/sonar-scanner-${SONAR_SCANNER_VERSION}/bin/sonar-scanner /usr/bin/sonar-scanner

    - sed -i -e "s|SONAR_URL|$SONAR_URL|g" .mvn/settings.xml
    - sed -i -e "s|SONAR_TOKEN|$SONAR_TOKEN|g" .mvn/settings.xml
  script:
    - mvn $MAVEN_CLI_OPTS sonar:sonar
    - echo ${SONAR_URL}
    - sonar-scanner -X -Dsonar.host.url=${SONAR_URL} -Dsonar.token=${SONAR_TOKEN}

push-BE-docker:
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [ "" ]
  rules:
    - if: $CI_COMMIT_TAG
  stage: docker
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"${NEXUS_URL}\":{\"auth\":\"${NEXUS_TOKEN}\"}}}" > /kaniko/.docker/config.json

    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile-kube --destination ${NEXUS_URL}/rest-be:$CI_COMMIT_TAG
push-FE-docker:
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [ "" ]
  rules:
    - if: $CI_COMMIT_TAG
  stage: docker
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"${NEXUS_URL}\":{\"auth\":\"${NEXUS_TOKEN}\"}}}" > /kaniko/.docker/config.json

    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile-react --destination ${NEXUS_URL}/rest-fe:$CI_COMMIT_TAG --build-arg "BASE_URL=http://backend.192.168.2.8.nip.io"

javadoc:
  needs:
    - build-BE
    - build-FE
  rules:
    - if: $CI_COMMIT_TAG
  stage: deploy
  variables:
    MAVEN_CLI_OPTS: >-
      -B
      -f pom.xml
      -s .mvn/settings.xml
      -Dmaven.test.skip=true
      -Drevision=$VERSION
  image: arm64v8/maven:3.9-eclipse-temurin-21-alpine
  before_script:
    - apk update && apk add git git-subtree
    - git config --global user.name "Gitlab CI"
    - git config --global user.email "gitlab@sativus.space"
  script:
    - mvn -s .mvn/settings.xml javadoc:javadoc
    - git subtree push --prefix target/site/apidocs https://$GIT_USER:$GIT_PW@github.com/AgroCorp/spring_rest.git gh-pages


kubernetes-deploy:
  stage: deploy
  rules:
    - if: $CI_COMMIT_TAG
  image: alpine/k8s:1.28.4
  script:
    - kubectl config get-contexts
    - kubectl config use-context gaborka98/spring_rest:gabor-pc
    - kubectl get pods
    - helm upgrade --install restapi restapi/ -n restapi --create-namespace